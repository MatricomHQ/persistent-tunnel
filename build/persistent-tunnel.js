// Generated by CoffeeScript 1.10.0
(function() {
  var NodeAgent, createTunnelConnection, http, net;

  net = require('net');

  http = require('http');

  NodeAgent = require('../vendor/_http_agent');

  createTunnelConnection = function(options, cb) {
    var connectOptions, onConnect, onError, proxyOptions, ref, ref1, ref2, req;
    proxyOptions = (ref = options.proxy) != null ? ref : {};
    connectOptions = {
      method: 'CONNECT',
      host: (ref1 = proxyOptions.host) != null ? ref1 : 'localhost',
      port: (ref2 = proxyOptions.port) != null ? ref2 : 3128,
      path: options.host + ":" + options.port,
      agent: false
    };
    onError = function(err, res) {
      var cause, error, ref3, ref4;
      cause = (ref3 = res != null ? res.statusCode : void 0) != null ? ref3 : err.message;
      error = new Error("tunneling socket could not be established: " + cause);
      error.statusCode = (ref4 = res != null ? res.statusCode : void 0) != null ? ref4 : 500;
      return cb(error);
    };
    onConnect = function(res, socket, head) {
      socket.removeAllListeners();
      if (res.statusCode === 200) {
        if (proxyOptions.timeout != null) {
          socket.setTimeout(proxyOptions.timeout, function() {
            socket.destroy();
            return socket.emit('agentRemove');
          });
        }
        return cb(null, socket);
      } else {
        return onError(null, res);
      }
    };
    req = http.request(connectOptions);
    req.once('connect', onConnect);
    req.once('error', onError);
    return req.end();
  };

  module.exports.Agent = NodeAgent.Agent;

  module.exports.createConnection = createTunnelConnection;

}).call(this);
